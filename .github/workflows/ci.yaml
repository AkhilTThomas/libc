name: CI

on:
  # Only on demand
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CARGO_TERM_VERBOSE: true
  LIBC_CI: 1
  RUSTDOCFLAGS: -Dwarnings
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: full

defaults:
  run:
    shell: bash

jobs:
  qnx-test:
    name: qnx-tests
    runs-on: ubuntu-latest 
    steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{github.actor}}
        password: ${{secrets.GHCR_PAT}

    - name: Pull build environment
      run: |
          docker pull ghcr.io/akhiltthomas/qnx800:latest

    - name: Checkout and build rust
      uses: addnab/docker-run-action@v3
      with:
        image: ghcr.io/akhiltthomas/qnx800:latest
        # admin cap neeeded for running qemu
        options: -v ${{ github.workspace }}:/home/runner/workspace --cap-add=NET_ADMIN --device /dev/net/tun
        shell: bash
        run: |
          source ~/qnx/800/qnxsdp-env.sh
          cd ~/workspace
          git clone --depth=1 https://github.com/rust-lang/rust.git && cd rust
          # Prepare bootstrap config for building qnx800 on x86-64 and aarch64
          cat > bootstrap.toml << 'EOF'
          [build]
          target = [
          "x86_64-unknown-linux-gnu",
          "x86_64-pc-nto-qnx800",
          "aarch64-unknown-nto-qnx800",
          ]
          EOF
          # build rustc and the core libraries
          ./x.py build rustc library/core library/alloc library/std library/proc_macro library/test

